version: '3.5'
services:
  traefik:
    image: "traefik:v2.3"
    networks:
      - semapps
    command:
      # - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=myEmail@myemail.fr"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      # - "8080:8080"
    volumes:
      - "./data/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  fuseki:
    image: semapps/jena-fuseki-webacl
    container_name: fuseki-classic
    volumes:
      - ./data/fuseki:/fuseki
      - ./data/staging:/staging
    ports:
      - "3030:3030"
    networks:
      - semapps
    environment:
      ADMIN_PASSWORD: "MyJenaPassword"

  middleware:
    build:
      context: ./deploy/middleware
      dockerfile: Dockerfile
    depends_on:
      - fuseki
      - keycloak
    volumes:
      - ./middleware/logs:/archipelago/middleware/logs
      - ./middleware/jwt:/archipelago/middleware/jwt
      - ./middleware/uploads:/archipelago/middleware/uploads
    environment:
      - SEMAPPS_SPARQL_ENDPOINT=http://semapps/fuseki-classic:3030/
      - SEMAPPS_MAIN_DATASET=localData
      - SEMAPPS_JENA_USER=admin
      - SEMAPPS_JENA_PASSWORD=MyJenaPassword
      - SEMAPPS_HOME_URL=https://data.myDomain.com/
      - 'SEMAPPS_OIDC_ISSUER=http://keycloak:8080/auth/realms/DP/'
      - SEMAPPS_OIDC_CLIENT_ID=semapps
      - SEMAPPS_REDIS_URL=redis://redis:6379/0
    networks:
      - semapps
    expose:
      - "3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.middleware.rule=Host(`data.myDomain.com`)"
      - "traefik.http.routers.middleware.entrypoints=websecure"
      - "traefik.http.routers.middleware.tls.certresolver=myresolver"

  frontend:
    build:
      context: ./deploy/frontend
      dockerfile: Dockerfile
    environment:
      - REACT_APP_MIDDLEWARE_URL=https://data.myDomain.com/
      - REACT_APP_MAPBOX_ACCESS_TOKEN=MyMapBoxToken
      - PORT=4000
    networks:
      - semapps
    expose:
      - "4000"
    command: bash -c "cp -r ./addOn/* src && yarn build && serve -s build"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`myDomain.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"

keycloak:
    image: jboss/keycloak
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/realm-export.json
      KEYCLOAK_FRONTEND_URL: 'https://login.myDomain.com/auth'
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
    depends_on:
      - postgres
    volumes:
      - './deploy/keycloak/realm-export.json:/tmp/realm-export.json'
    ports:
      - '8080:8080'
    networks:
      - semapps

  redis:
    image: redis
    container_name: redis
    expose:
      - "6379"
    volumes:
      - ./data/redis_data:/data
    networks:
      - semapps
    command: ["redis-server", "--appendonly", "yes"]


networks:
  semapps:
    name: semapps_network
